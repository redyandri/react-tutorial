{"version":3,"sources":["logo.svg","App.js","Form.js","reportWebVitals.js","index.js"],"names":["App","Component","state","data","removeCharacter","index","characters","setState","filter","character","i","handleSubmit","result","this","map","entry","fetch","then","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,I,mBCiEAA,GC/DIC,Y,4MDQjBC,MAAQ,CACNC,KAAM,I,EAGRC,gBAAkB,SAACC,GAAW,IACrBC,EAAc,EAAKJ,MAAnBI,WAEP,EAAKC,SAAS,CACZD,WAAYA,EAAWE,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAML,Q,EA0BnBM,aAAe,SAACF,GACd,EAAKF,SAAS,CAACD,WAAW,GAAD,mBAAM,EAAKJ,MAAMI,YAAjB,CAA6BG,O,4CAXxD,WAAU,IAGFG,EAFSC,KAAKX,MAAbC,KAEaW,KAAI,SAACC,EAAOV,GAC9B,OAAO,6BAAiBU,GAARV,MAGlB,OAAO,6BAAKO,M,+BAQd,WAAqB,IAAD,OAIlBI,MAFE,kGAGCC,MAAK,SAACL,GAAD,OAAYA,EAAOM,UACxBD,MAAK,SAACL,GACL,EAAKL,SAAS,CACZJ,KAAMS,W,GApDEX,cEMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c03bf504.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table'\nimport { Component } from 'react';\nimport Form from './Form'\n\nclass App extends Component {\n  // state = {\n  //   characters : [],\n  // }\n  state = {\n    data: [],\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  // render() {\n    // const { characters } = this.state\n    // return (\n      \n    //   <div className=\"App\">\n    //      <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n    //      <Form handleSubmit={this.handleSubmit} />\n    //   </div>\n    // );\n  // }\n\n  render() {\n    const {data} = this.state\n\n    const result = data.map((entry, index) => {\n      return <li key={index}>{entry}</li>\n    })\n\n    return <ul>{result}</ul>\n  }\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url =\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\n\n    fetch(url)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({\n          data: result,\n        })\n      })\n  }\n\n}\n\nexport default App;\n","import React, {Component} from 'react'\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: '',\n  }\n\n  state = this.initialState\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n  \n    this.setState({\n      [name]: value,\n    })\n  }\n\n  render() {\n    const { name, job } = this.state;\n  \n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n          <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n}\n\nexport default Form;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}